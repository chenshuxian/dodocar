車輛維修管理系統
1.維修管理
  a.新增
  b.修改
  c.刪除

  a.新增
  欄位(車號、入廠日期、出廠日期、)

   報表用每台車輛去 list


2.車輛管理(點進去後，展出目前車輛)
需要的欄位(車號、廠牌、引擎號碼、出廠年月、保險日期、排氣量、顏色、牌照狀態、手/自排、道駕車)
車牌---英文與數字，但會有 - 號，如：ABC-1234
廠牌---中英文
引擎號碼---英文與數字連續，如：K11GLA43708
出廠年月---西元年月，如：200201
保險日期---西元年月日，如：20191018
排氣量---千位數，如：1275
顏色---中文字，如：白
牌照狀態---中文，如：本區新領、停駛轉繳銷、外區移入-過戶、
手/自排---中文，兩個選項：手排/自排
道駕車---中文，兩個選項：是/否

開發步驟:
1. 建立車輛管理表
create table mCar(
   id VARCHAR(50) NOT NULL,
   car_number VARCHAR(100) NOT NULL,
   car_maker VARCHAR(40) NOT NULL,
   engin_id VARCHAR(40) NOT NULL,
   born_date bigint(20) NOT NULL,
   ins_date bigint(20) NOT NULL,
   cc bigint(20) NOT NULL,
   color VARCHAR(10) NOT NULL,
   lic_status VARCHAR(100) NOT NULL,
   hand_auto VARCHAR(40) NOT NULL,
   road_car int(10) NOT NULL,
   PRIMARY KEY ( id )
);
2. 建立服務接口
   1. 建立controllers
   2. 建立models
   3. 建立modules
3. 建立前端頁面

汽車維修管理
1. 建立管理頁面
   1.1 建立 components / mCar (Bootstrap custom edit)
   1.2 建立 container / mCar fn and mCar
2. Redux 資料
   2.1 建立 action
   2.2 建立 constants / models Redux store 
   2.4 建立 reducers / carReducers
3. WebAPI 設定
4. DB 設計
   4.1 create table
   create table mCarDetail(
   id VARCHAR(50) NOT NULL,
   car_id VARCHAR(100) NOT NULL,
   teacher_id VARCHAR(50) NOT NULL,
   fix_date bigint(20) NOT NULL,
   fix_store VARCHAR(50) NOT NULL,
   device VARCHAR(40) NOT NULL,
   num int(10) NOT NULL,
   price int(10) NOT NULL,
   salary int(10),
   totalPrice int(10) NOT NULL,
   createdAt bigint(20) NOT NULL,
   updatedAt bigint(20) NOT NULL,
   version int(10),
   PRIMARY KEY ( id )
);

  create table fixStore(
   id VARCHAR(50) NOT NULL,
   name VARCHAR(50) NOT NULL,
   PRIMARY KEY ( id )
);
5. Server 開發
   5.1 查出所有車輛id 
      select distinct car_number from mCar;
   5.２ 查出所有教師
      select name from teachers; 
   5.3 建立新增維護資料接口
      1. server / controllers mcar.js
      2. server / models 建立DB 模型
      3. server / modules 建立 
  
  insert into fixStore values('1','銘將');